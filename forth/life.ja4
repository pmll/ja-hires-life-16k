: file-comment ( life for Jupiter Ace with 16k expansion) ;

16 base c!
4E00 3C18 ! quit
decimal

2 base c!
create cell-bitmap
    0110 c,
    1001 c,
    1001 c,
    0110 c,
decimal

11264 constant udg-mem

create udg-work
    8 allot

: clear-udg-work
    udg-work dup 8 + swap do
        0 i c!
    loop
;

: create-udg-from-work ( char num -- )
    8 * udg-mem +
    8 0 do
        udg-work i + c@
        over i + c!
    loop
    drop
;

: cor! ( value to or with existing, addr --)
    dup c@
    rot or
    swap c!
;

: add-cell-to-udg ( char num, cell mask -- char num)
    over over
    and 0= 0= if   ( cell needed?)
        ( left/right hand nibble multiplier)
        dup 12 and 0= if
            1
        else
            16
        then
        swap 6 and 0= if ( top or bottom half?)
            udg-work
        else
            udg-work 4 +
        then
        4 0 do
            cell-bitmap i + c@ 3 pick *
            over cor!
            1+
        loop
        drop
    then
    drop
;

: create-cell-udg ( char num -- )
    clear-udg-work
    1 add-cell-to-udg
    2 add-cell-to-udg
    4 add-cell-to-udg
    8 add-cell-to-udg
    create-udg-from-work
;

: create-cell-udgs
    16 0 do
        i create-cell-udg
    loop
;

: show-cells ( we can remove this word once we're happy...)
    16 0 do
        cr i . ." -- " i emit  ( oops, emitting chr 13 just gives us a CR)
    loop
    cr
;



16 base c!
4E00 constant world-store
decimal
1 constant world-frame0-offset
67 constant world-frame1-offset
0 constant nowrap
1 constant wrap

0 variable current-frame-offset
0 variable work-frame-offset
0 variable wrap-world

16 base c!
create world-to-screen
    A7 c, 11 c, 00 c, 24 c, 26 c, 4F c, 0E c, 18 c,
    3A c, current-frame-offset , 6F c, 06 c, 20 c, 7E c, 24 c,
    17 c, B6 c, 2C c, 17 c, B6 c, 25 c, 17 c, B6 c,
    12 c, 13 c, 2C c, 10 c, F1 c, 24 c, 24 c, 0D c,
    20 c, E6 c, C9 c,

create show-world
    CD c, world-to-screen , FD c, E9 c,

create copy-wrap-cells
    26 c, 4F c, 54 c, 3A c, current-frame-offset , 5F c, C6 c,
    40 c, 6F c, 06 c, 30 c, 1A c, 77 c, 1D c, 2D c,
    7E c, 12 c, 1C c, 2C c, 14 c, 24 c, 10 c, F4 c,
    26 c, 7E c, 16 c, 4E c, 3A c, current-frame-offset , 3D c,
    6F c, 5F c, 01 c, 42 c, 00 c, ED c, B0 c, 26 c,
    4F c, 16 c, 7F c, 3A c, current-frame-offset , 3D c, 6F c,
    5F c, 01 c, 42 c, 00 c, ED c, B0 c, C9 c,

create update-world
    3A c, wrap-world , FE c, 00 c, 28 c, 03 c, CD c,
    copy-wrap-cells , 26 c, 4F c, 54 c, 0E c, 30 c, 3A c,
    current-frame-offset , 6F c, 3A c, work-frame-offset , 5F c, 06 c,
    40 c, AF c, 2C c, 86 c, 25 c, 86 c, 2D c, 86 c,
    2D c, 86 c, 24 c, 86 c, 24 c, 86 c, 2C c, 86 c,
    2C c, 86 c, 25 c, 2D c, CB c, 46 c, 20 c, 08 c,
    FE c, 03 c, 20 c, 10 c, 3E c, 01 c, 18 c, 0D c,
    FE c, 02 c, 38 c, 08 c, FE c, 04 c, 30 c, 04 c,
    3E c, 01 c, 18 c, 01 c, AF c, 12 c, 1C c, 2C c,
    10 c, CF c, 24 c, 14 c, 0D c, 20 c, C0 c, 3A c,
    current-frame-offset , 6F c, 3A c, work-frame-offset , 32 c, current-frame-offset ,
    7D c, 32 c, work-frame-offset , CD c, world-to-screen ,
    FD c, E9 c,
decimal

: clear-world-row ( start addr --)
    dup [ world-frame1-offset 65 + ] literal + swap do
        0 i ! 
    2 +loop
;

: clear-world
    [ world-store 50 256 * + 1- ] literal world-store do
        i clear-world-row
    256 +loop
;

: life
    begin
        update-world call
    0 until
;

: gen-life ( wrap-world --)
    wrap-world !
    cls 10 9 at ." Please wait..." ( because it won't be quick)
    create-cell-udgs
    clear-world
    world-frame0-offset current-frame-offset !
    world-frame1-offset work-frame-offset !
    world-store 256 + world-frame0-offset +
    15403 @ 4095 and
    48 0 do
        64 0 do
            dup c@ 3 and 3 = if
                1 3 pick c!
            then
            1+ swap 1+ swap
        loop
        swap [ 256 64 - ] literal + swap
    loop
    drop
    drop
    show-world call
    life
;

: prep-life ( address of pre-prepared world)
    cls 10 9 at ." Please wait..."
    create-cell-udgs
    clear-world
    begin
        dup c@          ( x co-ord or terminator value)
        swap 1+ dup c@  ( y co-ord)
        swap 1+
        rot dup 254 <
    while
        64 mod
        rot 48 mod 47 - negate 256 *
        +
        [ world-store 256 + world-frame0-offset + ] literal +
        1 swap c!
    repeat
    1 and wrap-world !
    drop
    drop
    world-frame0-offset current-frame-offset !
    world-frame1-offset work-frame-offset !
    show-world call
    life
;



: demo-comment ( pre-prepared demo worlds from hereon) ;

: make-glider ( x, y --)
    over c, dup c,
    over 1+ c, dup c,
    over 2+ c, dup c,
    over 2+ c, dup 1+ c,
    swap 1+ c, 2+ c,
;

: make-gliders
    61 10 do
        41 10 do
            j i make-glider
        10 +loop
    10 +loop
;

create gliders
    make-gliders
    -1 c,

create osc
    1 c, 24 c, 2 c, 24 c, 3 c, 24 c,
    8 c, 24 c, 9 c, 24 c, 9 c, 25 c, 10 c, 24 c, 10 c, 25 c, 11 c, 25 c,
    16 c, 26 c, 17 c, 26 c, 16 c, 25 c, 19 c, 24 c, 19 c, 23 c, 18 c, 23 c,

    24 c, 22 c, 24 c, 21 c, 24 c, 20 c, 24 c, 26 c, 24 c, 27 c, 24 c, 28 c,
    29 c, 22 c, 29 c, 21 c, 29 c, 20 c, 29 c, 26 c, 29 c, 27 c, 29 c, 28 c,
    31 c, 22 c, 31 c, 21 c, 31 c, 20 c, 31 c, 26 c, 31 c, 27 c, 31 c, 28 c,
    36 c, 22 c, 36 c, 21 c, 36 c, 20 c, 36 c, 26 c, 36 c, 27 c, 36 c, 28 c,
    26 c, 30 c, 27 c, 30 c, 28 c, 30 c, 32 c, 30 c, 33 c, 30 c, 34 c, 30 c,
    26 c, 25 c, 27 c, 25 c, 28 c, 25 c, 32 c, 25 c, 33 c, 25 c, 34 c, 25 c,
    26 c, 23 c, 27 c, 23 c, 28 c, 23 c, 32 c, 23 c, 33 c, 23 c, 34 c, 23 c,
    26 c, 18 c, 27 c, 18 c, 28 c, 18 c, 32 c, 18 c, 33 c, 18 c, 34 c, 18 c,

    44 c, 24 c, 45 c, 24 c, 46 c, 25 c, 46 c, 23 c, 47 c, 24 c, 48 c, 24 c,
    49 c, 24 c, 50 c, 24 c, 51 c, 25 c, 51 c, 23 c, 52 c, 24 c, 53 c, 24 c,
    -1 c,

create gosper
    2 c, 40 c, 3 c, 40 c, 2 c, 39 c, 3 c, 39 c,
    12 c, 40 c, 12 c, 39 c, 12 c, 38 c, 13 c, 41 c, 13 c, 37 c,
    14 c, 42 c, 15 c, 42 c, 14 c, 36 c, 15 c, 36 c, 16 c, 39 c,
    17 c, 41 c, 17 c, 37 c, 18 c, 40 c, 18 c, 39 c, 18 c, 38 c,
    19 c, 39 c, 22 c, 42 c, 22 c, 41 c, 22 c, 40 c,
    23 c, 42 c, 23 c, 41 c, 23 c, 40 c, 24 c, 43 c, 24 c, 39 c,
    26 c, 43 c, 26 c, 44 c, 26 c, 39 c, 26 c, 38 c,
    36 c, 42 c, 36 c, 41 c, 37 c, 42 c, 37 c, 41 c,
    -2 c,
